version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: shared-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app_db}
      POSTGRES_USER: ${POSTGRES_USER:-app_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app_password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-app_user} -d ${POSTGRES_DB:-app_db}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Flask Application
  flask-app:
    build:
      context: ./docker
      dockerfile: flask.Dockerfile
    container_name: shared-flask-app
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-app_user}:${POSTGRES_PASSWORD:-app_password}@postgres:5432/${POSTGRES_DB:-app_db}
      FLASK_ENV: ${FLASK_ENV:-development}
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key}
    ports:
      - "${FLASK_PORT:-5000}:5000"
    volumes:
      - ${FLASK_APP_PATH:-../apps/flask-app}:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: python app.py

  # Node.js Application
  node-app:
    build:
      context: ./docker
      dockerfile: node.Dockerfile
    container_name: shared-node-app
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-app_user}:${POSTGRES_PASSWORD:-app_password}@postgres:5432/${POSTGRES_DB:-app_db}
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3000
    ports:
      - "${NODE_PORT:-3000}:3000"
    volumes:
      - ${NODE_APP_PATH:-../apps/node-app}:/app
      - node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: npm run dev

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: shared-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ${SSL_CERT_PATH:-./ssl}:/etc/ssl/certs
    depends_on:
      - flask-app
      - node-app
    networks:
      - app-network

volumes:
  postgres_data:
  node_modules:

networks:
  app-network:
    driver: bridge